from datetime import datetime
from models import models
from utils.zodiak import zodiac_sign


async def generate_ad_text(target_user: models.UserModel, general_percent: int) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è"""
    zodiak = await zodiac_sign(target_user.birthday)
    city = await target_user.place
    marital_status = await target_user.marital_status
    # year = datetime.now().year
    age = (datetime.utcnow().date() - target_user.birthday).days / 365
    text = f"{target_user.name}, {int(age)}\n"  \
           f"{zodiak}\n" \
           f"üó∫Ô∏è {city.place_name}\n" \
           f"üë´ {marital_status.title_status}\n"  \
           f"–î–µ—Ç–∏: "
    if target_user.children is True:
        text += "–ï—Å—Ç—å\n"
    elif target_user.children is False:
        text += "–ù–µ—Ç\n"
    elif target_user.children is None:
        text += "–ù–µ —Å–∫–∞–∂—É\n"
    if target_user.children_age != []:
        text += "–í–æ–∑—Ä–∞—Å—Ç –¥–µ—Ç–µ–π: " + ", ".join([str(i)+" –≥." for i in target_user.children_age]) + "\n"
    target_hobbies = await target_user.hobbies.all()
    if target_hobbies:
        text += "–£–≤–ª–µ—á–µ–Ω–∏—è: " + ", ".join([i.title_hobbie for i in target_hobbies]) + "\n"
    # percent = relation.percent_compatibility
    if general_percent is not None:
        if general_percent > 99:
            general_percent = 99
        text += f"–ü—Ä–æ—Ü–µ–Ω—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏: {general_percent}%"
    return text

